services:
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    restart: on-failure
    pid: host
    cgroup_parent: host
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_SERVICE=dd-agent
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE_LOGS="name:dd-agent"
    networks:
      - processmaker
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock:ro
      - ${PM_BUILD_SOURCE}/stubs/dd-agent/conf.d/php_fpm.d/conf.yaml:/etc/datadog-agent/conf.d/php_fpm.d/conf.yaml
      - ${PM_BUILD_SOURCE}/stubs/dd-agent/conf.d/nginx.d/conf.yaml:/etc/datadog-agent/conf.d/nginx.d/conf.yaml
      - ${PM_BUILD_SOURCE}/stubs/dd-agent/datadog.yaml:/etc/datadog-agent/datadog.yaml:ro
      - /proc/:/host/proc:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    ports:
      - 8126:8126

  ai:
    image: processmaker-ai:${PM_IMAGE_NAME}
    hostname: ${PM_DOMAIN}
    stop_grace_period: 10s
    deploy:
      mode: global
      restart_policy:
        condition: "on-failure"
        delay: 3s
        max_attempts: 3
    build:
      context: ./services/ai
    depends_on:
      database-host:
        condition: service_healthy
    ports:
      - 8010:8010
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    networks:
      - processmaker
    links:
      - database-host
    env_file:
      - .env
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_USER=${DB_USERNAME}
      - DATABASE_PASS=${DB_PASSWORD}
      - DATABASE_NAME=${DB_DATABASE}

  installer:
    image: processmaker:${PM_IMAGE_NAME}
    entrypoint: [ "/usr/bin/installer-entrypoint" ]
    stop_signal: SIGTERM
    stop_grace_period: 10s
    deploy:
      mode: global
      restart_policy:
        condition: "no"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    sysctls:
      kernel.domainname: ${PM_DOMAIN}
      net.ipv4.tcp_syncookies: 1
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.conf.all.secure_redirects: 1
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv6.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_rmem: '4096 4096 16777216'
      net.ipv4.tcp_wmem: '4096 4096 16777216'
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30
      net.core.somaxconn: 60000
      net.ipv4.tcp_synack_retries: 3
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    networks:
      - processmaker
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_HOSTNAME=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=installer
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_CLI_ENABLED=1
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_LOGS_INJECTION=1
    volumes:
      - type: volume
        source: sockets
        target: /var/run/mysqld
        volume:
          nocopy: true
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}:${PM_DIR}:consistent
      - build:${PM_DIR}/storage/build:consistent
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
    links:
      - database-host
      - redis
    depends_on:
      redis:
        condition: service_healthy
        required: true
      database-host:
        condition: service_healthy
        required: true

  php-fpm:
    image: processmaker:${PM_IMAGE_NAME}
    entrypoint: [ "/usr/bin/php-fpm-entrypoint" ]
    stop_signal: SIGTERM
    stop_grace_period: 5s
    healthcheck:
      test: "curl processmaker.test/ping || exit 1"
      interval: 1m
      timeout: 3s
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      resources:
        reservations:
          cpus: '2'
          memory: 1.5G
        limits:
          cpus: '3'
          memory: 2G
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    sysctls:
      kernel.domainname: ${PM_DOMAIN}
      net.ipv4.tcp_syncookies: 1
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.conf.all.secure_redirects: 1
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv6.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_rmem: '4096 4096 16777216'
      net.ipv4.tcp_wmem: '4096 4096 16777216'
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30
      net.core.somaxconn: 60000
      net.ipv4.tcp_synack_retries: 3
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=web
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_CLI_ENABLED=1
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_LOGS_INJECTION=1
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    networks:
      - processmaker
    volumes:
      - type: volume
        source: sockets
        target: /var/run/php
        volume:
          nocopy: true
      - type: volume
        source: sockets
        target: /var/run/mysqld
        volume:
          nocopy: true
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}:${PM_DIR}:consistent
      - build:${PM_DIR}/storage/build:consistent
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
    links:
      - database-host
      - redis
    depends_on:
      installer:
        condition: service_started
        required: true
      database-host:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true

  http-ingress:
    image: nginx:stable
    hostname: ${PM_DOMAIN}
    healthcheck:
      test: "curl http://${PM_DOMAIN}/nginx_status || exit 1"
      interval: 1m
      timeout: 10s
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 3s
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          cpus: '1'
          memory: 512M
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=http-entrypoint
      - DD_AGENT_HOST=dd-agent
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_LOGS_INJECTION=1
    networks:
      - processmaker
    ports:
      - ${PM_APP_PORT}:80
    volumes:
      - type: volume
        source: sockets
        target: /var/run/php
        volume:
          nocopy: true
      - type: volume
        source: sockets
        target: /var/run/nginx
        volume:
          nocopy: true
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}/public:${PM_DIR}/public:consistent
      - ${PM_BUILD_SOURCE}/stubs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - app-storage:${PM_DIR}/storage/app:consistent
    links:
      - database-host
      - redis
    depends_on:
      installer:
        condition: service_started
        required: true
      database-host:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
      php-fpm:
        condition: service_started
        required: true

  scheduler:
    image: processmaker:${PM_IMAGE_NAME}
    entrypoint: [ "/usr/bin/scheduler-entrypoint" ]
    stop_signal: SIGTERM
    stop_grace_period: 5s
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      mode: global
      restart_policy:
        condition: always
        delay: 3s
    sysctls:
      kernel.domainname: ${PM_DOMAIN}
      net.ipv4.tcp_syncookies: 1
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.conf.all.secure_redirects: 1
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv6.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_rmem: '4096 4096 16777216'
      net.ipv4.tcp_wmem: '4096 4096 16777216'
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30
      net.core.somaxconn: 60000
      net.ipv4.tcp_synack_retries: 3
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=scheduler
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_CLI_ENABLED=1
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_LOGS_INJECTION=1
    networks:
      - processmaker
    volumes:
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}:${PM_DIR}:consistent
      - build:${PM_DIR}/storage/build:consistent
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
    links:
      - database-host
      - redis
    depends_on:
      installer:
        condition: service_started
        required: true
      database-host:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true

  soketi:
    image: processmaker:${PM_IMAGE_NAME}
    entrypoint: [ "/usr/bin/echo-entrypoint" ]
    stop_signal: SIGTERM
    stop_grace_period: 5s
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    sysctls:
      kernel.domainname: ${PM_DOMAIN}
      net.ipv4.tcp_syncookies: 1
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.conf.all.secure_redirects: 1
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv6.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_rmem: '4096 4096 16777216'
      net.ipv4.tcp_wmem: '4096 4096 16777216'
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30
      net.core.somaxconn: 60000
      net.ipv4.tcp_synack_retries: 3
    ports:
      - ${PM_BROADCASTER_PORT}:6001
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=soketi
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_CLI_ENABLED=1
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_LOGS_INJECTION=1
    networks:
      - processmaker
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}:${PM_DIR}:consistent
      - ${PM_BUILD_SOURCE}/stubs/echo/laravel-echo-server.json:${PM_DIR}/laravel-echo-server.json:ro
      - build:${PM_DIR}/storage/build:consistent
    links:
      - database-host
      - redis
    depends_on:
      installer:
        condition: service_started
        required: true
      database-host:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true

  queue:
    image: processmaker:${PM_IMAGE_NAME}
    entrypoint: [ "/usr/bin/queue-entrypoint" ]
    stop_signal: SIGTERM
    stop_grace_period: 5s
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    sysctls:
      kernel.domainname: ${PM_DOMAIN}
      net.ipv4.tcp_syncookies: 1
      net.ipv4.conf.all.rp_filter: 1
      net.ipv4.conf.all.secure_redirects: 1
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv6.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_rmem: '4096 4096 16777216'
      net.ipv4.tcp_wmem: '4096 4096 16777216'
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30
      net.core.somaxconn: 60000
      net.ipv4.tcp_synack_retries: 3
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - '${PM_DOMAIN}:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    healthcheck:
      test: "php artisan horizon:snapshot || exit 1"
      interval: 1m
      timeout: 5s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: always
        delay: 0s
        max_attempts: 0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=queue
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_CLI_ENABLED=1
      - DD_TRACE_AUTO_FLUSH_ENABLED=1
      - DD_AUTOFINISH_SPANS=1
      - DD_LOGS_INJECTION=1
      - DD_PROFILING_EXPERIMENTAL_TIMELINE_ENABLED=1
      - DD_INSTRUMENTATION_TELEMETRY_ENABLED=0
      - DD_SERVICE_MAPPING=laravelqueue:queue
    networks:
      - processmaker
    volumes:
      - type: volume
        source: sockets
        target: /var/run/mysqld
        volume:
          nocopy: true
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_APP_SOURCE}:${PM_DIR}:consistent
      - build:${PM_DIR}/storage/build:consistent
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
    links:
      - database-host
      - redis
    depends_on:
      installer:
        condition: service_started
        required: true
      redis:
        condition: service_healthy
        required: true
      database-host:
        condition: service_healthy
        required: true

  database-host:
    image: mysql:8
    restart: on-failure
    command: "mysqld --port=${DB_PORT}"
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: mysqladmin ping -P ${DB_PORT} -u ${DB_USERNAME} -p${DB_PASSWORD} -h ${DB_HOST}
      interval: 15s
      timeout: 5s
    deploy:
      mode: global
      resources:
        reservations:
          cpus: '1'
          memory: 1.5G
        limits:
          cpus: '2'
          memory: 3G
    networks:
      - processmaker
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      MYSQL_DATABASE: processmaker
      MYSQL_ROOT_PASSWORD: password
      DD_ENV: ${DD_ENV}
      DD_VERSION: ${DD_VERSION}
      DD_SERVICE: database-host
      DD_AGENT_HOST: dd-agent
    volumes:
      - type: volume
        source: sockets
        target: /var/run/mysqld
        volume:
          nocopy: true
      - mysql-data:/var/lib/mysql
      - ${PM_BUILD_SOURCE}/stubs/mysql:/etc/mysql/conf.d:ro

  redis:
    image: redis:7
    restart: on-failure
    healthcheck:
      test: redis-cli ping --host 0.0.0.0 --port ${PM_BROADCASTER_PORT}
      interval: 15s
      timeout: 5s
    networks:
      - processmaker
    volumes:
      - redis-data:/data
    environment:
      - DD_ENV=${DD_ENV}
      - DD_VERSION=${DD_VERSION}
      - DD_SERVICE=cache
      - DD_AGENT_HOST=dd-agent

volumes:
  app-storage: { }
  mysql-data: { }
  redis-data: { }
  compiled-views: { }
  compiled-classes: { }
  compiled-facades: { }
  sockets: { }
  build: { }
  logs: { }

networks:
  processmaker:
    driver: bridge
