services:
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    restart: on-failure
    pid: host
    cgroup_parent: host
    env_file:
      - .env
    networks:
      - pm-v4
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /etc/passwd:/etc/passwd:ro
    ports:
      - 8126:8126
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED
      - DD_SITE
      - DD_APM_NON_LOCAL_TRAFFIC
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC
      - DD_PROCESS_AGENT_ENABLED
      - DD_LOGS_ENABLED
      - DD_CONTAINER_ENV_AS_TAGS
  installer:
    image: processmaker:${PM_BRANCH}
    restart: "no"
    entrypoint: "/usr/local/bin/installer-entrypoint"
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    networks:
      - pm-v4
    env_file:
      - .env
    volumes:
      - type: bind
        source: ${PM_APP_SOURCE}
        target: /var/www/html
        consistency: consistent
      - type: bind
        source: ${PM_DOCKER_SOCK}
        target: /var/run/docker.sock
        consistency: consistent
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - logs:/var/www/html/storage/logs
      - compiled:/var/www/html/bootstrap/cache
      - node-modules:/var/www/html/node_modules
      - composer-vendor:/var/www/html/vendor
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - dd-agent
  web:
    image: processmaker:${PM_BRANCH}
    restart: always
    entrypoint: ["/usr/local/bin/web-entrypoint"]
    healthcheck:
      test: "curl -f \"http://${PM_DOMAIN}/ping\" || exit 1"
      interval: 5s
      timeout: 3s
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    env_file:
      - .env
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
        PM_INSTALL_ENTERPRISE_PACKAGES:
    networks:
      - pm-v4
    ports:
      - ${PM_APP_PORT}:80
      - ${PM_BROADCASTER_PORT}:6001
    volumes:
      - type: bind
        source: ${PM_APP_SOURCE}
        target: /var/www/html
        consistency: consistent
      - type: bind
        source: ${PM_DOCKER_SOCK}
        target: /var/run/docker.sock
        consistency: consistent
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - logs:/var/www/html/storage/logs
      - compiled:/var/www/html/bootstrap/cache
      - node-modules:/var/www/html/node_modules
      - composer-vendor:/var/www/html/vendor
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - installer
      - dd-agent
  queue:
    image: processmaker:${PM_BRANCH}
    restart: always
    entrypoint: ["/usr/local/bin/queue-entrypoint"]
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    healthcheck:
      test: "php artisan horizon:status || exit 1"
      interval: 5s
      timeout: 3s
    deploy:
      mode: replicated
      replicas: 2
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    networks:
      - pm-v4
    volumes:
      - type: bind
        source: ${PM_APP_SOURCE}
        target: /var/www/html
        consistency: consistent
      - type: bind
        source: ${PM_DOCKER_SOCK}
        target: /var/run/docker.sock
        consistency: consistent
      - type: bind
        source: ${PM_COMPOSER_PACKAGES_SOURCE_PATH}
        target: /opt/packages
        consistency: consistent
      - logs:/var/www/html/storage/logs
      - compiled:/var/www/html/bootstrap/cache
      - node-modules:/var/www/html/node_modules
      - composer-vendor:/var/www/html/vendor
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - installer
      - dd-agent
  redis:
    image: redis:7
    restart: on-failure
    depends_on:
      - dd-agent
    networks:
      - pm-v4
    volumes:
      - redis-data:/data
  mysql:
    image: mysql:8
    restart: on-failure
    depends_on:
      - dd-agent
    networks:
      - pm-v4
    environment:
      MYSQL_DATABASE: processmaker
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
volumes:
  mysql-data: {}
  redis-data: {}
  composer-vendor: {}
  node-modules: {}
  compiled: {}
  logs: {}
networks:
  pm-v4: {}
