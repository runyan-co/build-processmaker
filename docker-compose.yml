services:
  installer:
    image: processmaker:${PM_IMAGE_NAME}
    restart: "no"
    entrypoint: ["/usr/local/bin/installer-entrypoint"]
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    networks:
      - processmaker
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_HOSTNAME=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=3306
    volumes:
      - build:${PM_DIR}/storage/build:consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_COMPOSER_PACKAGES_SOURCE_PATH}:/opt/packages:delegated
      - ${PM_APP_SOURCE}:${PM_DIR}:delegated
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
      - node-modules:${PM_DIR}/node_modules:delegated
      - composer-vendor:${PM_DIR}/vendor:delegated
      - public:${PM_DIR}/public:delegated
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
  web:
    image: processmaker:${PM_IMAGE_NAME}
    restart: always
    entrypoint: ["/usr/local/bin/web-entrypoint"]
    healthcheck:
      test: "curl -f \"http://${PM_DOMAIN}/ping\" || exit 1"
      interval: 15s
      timeout: 3s
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    env_file:
      - .env
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    networks:
      - processmaker
    ports:
      - ${PM_APP_PORT}:80
    volumes:
      - build:${PM_DIR}/storage/build:consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_COMPOSER_PACKAGES_SOURCE_PATH}:/opt/packages:delegated
      - ${PM_APP_SOURCE}:${PM_DIR}:delegated
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
      - node-modules:${PM_DIR}/node_modules:delegated
      - composer-vendor:${PM_DIR}/vendor:delegated
      - public:${PM_DIR}/public:delegated
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
      - installer
  echo:
    image: processmaker:${PM_IMAGE_NAME}
    restart: always
    entrypoint: ["/usr/local/bin/echo-entrypoint"]
    ports:
      - ${PM_BROADCASTER_PORT}:6001
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    networks:
      - processmaker
    volumes:
      - build:${PM_DIR}/storage/build:consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_COMPOSER_PACKAGES_SOURCE_PATH}:/opt/packages:delegated
      - ${PM_APP_SOURCE}:${PM_DIR}:delegated
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
      - node-modules:${PM_DIR}/node_modules:delegated
      - composer-vendor:${PM_DIR}/vendor:delegated
      - public:${PM_DIR}/public:delegated
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
      - installer
      - web
  queue:
    image: processmaker:${PM_IMAGE_NAME}
    restart: always
    entrypoint: ["/usr/local/bin/queue-entrypoint"]
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 2606:4700:4700::1111
      - 2606:4700:4700::1001
      - 0.0.0.0
    healthcheck:
      test: "php artisan horizon:snapshot || exit 1"
      interval: 15s
      timeout: 3s
    deploy:
      mode: replicated
      replicas: 2
    build:
      context: .
      args:
        PM_DOCKER_SOCK:
        PM_BRANCH:
        PM_APP_PORT:
        PM_BROADCASTER_PORT:
        PM_DOMAIN:
        PM_DIR:
        GITHUB_EMAIL:
        GITHUB_USERNAME:
        GITHUB_OAUTH_TOKEN:
    env_file:
      - .env
    networks:
      - processmaker
    volumes:
      - build:${PM_DIR}/storage/build:consistent
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - ${PM_COMPOSER_PACKAGES_SOURCE_PATH}:/opt/packages:delegated
      - ${PM_APP_SOURCE}:${PM_DIR}:delegated
      - app-storage:${PM_DIR}/storage/app:consistent
      - logs:${PM_DIR}/storage/logs:delegated
      - compiled-classes:${PM_DIR}/bootstrap/cache:delegated
      - compiled-views:${PM_DIR}/storage/framework/views:delegated
      - compiled-facades:${PM_DIR}/storage/framework/cache:delegated
      - node-modules:${PM_DIR}/node_modules:delegated
      - composer-vendor:${PM_DIR}/vendor:delegated
      - public:${PM_DIR}/public:delegated
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
      - installer
  mysql:
    image: mysql:8
    restart: on-failure
    healthcheck:
      test: mysqladmin ping -u ${DB_USERNAME} -p${DB_PASSWORD} -h ${DB_HOST}
      interval: 15s
      timeout: 5s
    networks:
      - processmaker
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: processmaker
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - ${PM_BUILD_SOURCE}/stubs/mysql:/etc/mysql/conf.d:ro
  redis:
    image: redis:7
    restart: on-failure
    healthcheck:
      test: redis-cli ping --host 0.0.0.0
      interval: 15s
      timeout: 5s
    networks:
      - processmaker
    volumes:
      - redis-data:/data
volumes:
  app-storage: {}
  mysql-data: {}
  redis-data: {}
  compiled-views: {}
  compiled-classes: {}
  compiled-facades: {}
  composer-vendor: {}
  node-modules: {}
  public: {}
  build: {}
  logs: {}
networks:
  processmaker: {
    driver: bridge
  }
