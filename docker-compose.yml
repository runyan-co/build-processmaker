services:
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    restart: on-failure
    pid: host
    cgroup_parent: host
    env_file:
      - .env
    networks:
      - pm-v4
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /etc/passwd:/etc/passwd:ro
    ports:
      - 8126:8126
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED
      - DD_SITE
      - DD_APM_NON_LOCAL_TRAFFIC
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC
      - DD_PROCESS_AGENT_ENABLED
      - DD_LOGS_ENABLED
      - DD_CONTAINER_ENV_AS_TAGS
  installer:
    image: pm-v4-installer:latest
    build:
      context: .
      target: installer
      no_cache: true
      args:
        PHP_VERSION: 8.1
        NODE_VERSION: 16.18.1
        GITHUB_OAUTH_TOKEN: ${GITHUB_OAUTH_TOKEN}
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_EMAIL: ${GITHUB_EMAIL}
        PM_COMPOSER_PACKAGES_BUILD_PATH: ${PM_COMPOSER_PACKAGES_BUILD_PATH}
        PM_INSTALL_ENTERPRISE_PACKAGES: ${PM_INSTALL_ENTERPRISE_PACKAGES}
        PM_APP_PORT: ${PM_APP_PORT}
        PM_BROADCASTER_PORT: ${PM_BROADCASTER_PORT}
        PM_DOCKER_SOCK: ${PM_DOCKER_SOCK}
        PM_DOMAIN: ${PM_DOMAIN}
        PM_BRANCH: ${PM_BRANCH}
    networks:
      - pm-v4
    env_file:
      - .env
    environment:
      - APP_CIPHER
      - PM_APP_PORT
      - PM_DOMAIN
      - PM_DOCKER_SOCK
      - PM_BROADCASTER_PORT
      - PM_BRANCH
      - PM_INSTALL_ENTERPRISE_PACKAGES
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - storage:/home/pm-v4/storage
      - public:/home/pm-v4/public
      - composer-packages:/opt/composer-packages
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - dd-agent
  web:
    image: pm-v4-web:latest
    restart: always
    env_file: .env
    build:
      context: .
      target: web
      args:
        PHP_VERSION: 8.1
        NODE_VERSION: 16.18.1
        GITHUB_OAUTH_TOKEN: ${GITHUB_OAUTH_TOKEN}
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_EMAIL: ${GITHUB_EMAIL}
        PM_COMPOSER_PACKAGES_BUILD_PATH: ${PM_COMPOSER_PACKAGES_BUILD_PATH}
        PM_INSTALL_ENTERPRISE_PACKAGES: ${PM_INSTALL_ENTERPRISE_PACKAGES}
        PM_APP_PORT: ${PM_APP_PORT}
        PM_BROADCASTER_PORT: ${PM_BROADCASTER_PORT}
        PM_DOCKER_SOCK: ${PM_DOCKER_SOCK}
        PM_DOMAIN: ${PM_DOMAIN}
        PM_BRANCH: ${PM_BRANCH}
    networks:
      - pm-v4
    ports:
      - ${PM_APP_PORT}:80
      - ${PM_BROADCASTER_PORT}:6001
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - storage:/home/pm-v4/storage
      - public:/home/pm-v4/public
      - composer-packages:/opt/composer-packages
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - installer
      - dd-agent
  queue:
    image: pm-v4-queue:latest
    build:
      context: .
      target: queue
      args:
        PHP_VERSION: 8.1
        NODE_VERSION: 16.18.1
        GITHUB_OAUTH_TOKEN: ${GITHUB_OAUTH_TOKEN}
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_EMAIL: ${GITHUB_EMAIL}
        PM_COMPOSER_PACKAGES_BUILD_PATH: ${PM_COMPOSER_PACKAGES_BUILD_PATH}
        PM_INSTALL_ENTERPRISE_PACKAGES: ${PM_INSTALL_ENTERPRISE_PACKAGES}
        PM_APP_PORT: ${PM_APP_PORT}
        PM_BROADCASTER_PORT: ${PM_BROADCASTER_PORT}
        PM_DOCKER_SOCK: ${PM_DOCKER_SOCK}
        PM_DOMAIN: ${PM_DOMAIN}
        PM_BRANCH: ${PM_BRANCH}
    restart: always
    env_file: .env
    deploy:
      replicas: 2
      mode: replicated
    networks:
      - pm-v4
    volumes:
      - ${PM_DOCKER_SOCK}:/var/run/docker.sock
      - storage:/home/pm-v4/storage
      - public:/home/pm-v4/public
      - composer-packages:/opt/composer-packages
    links:
      - redis
      - mysql
    depends_on:
      - mysql
      - redis
      - installer
      - dd-agent
  redis:
    image: redis:7
    restart: on-failure
    depends_on:
      - dd-agent
    networks:
      - pm-v4
    volumes:
      - redis-data:/data
  mysql:
    image: mysql:8
    restart: on-failure
    depends_on:
      - dd-agent
    networks:
      - pm-v4
    environment:
      MYSQL_DATABASE: processmaker
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
volumes:
  db-data: {}
  redis-data: {}
  storage: {}
  public: {}
  composer-packages: {}
networks:
  pm-v4: {}
