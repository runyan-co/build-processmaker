FROM ubuntu:22.04 AS base-env

#
# Build arguments
#
ARG PHP_VERSION
ARG NODE_VERSION

#
# environment vars
#
ENV DEBIAN_FRONTEND     "noninteractive"
ENV DOCKERVERSION       "20.10.5"
ENV PM_APP_PORT         8080
ENV PM_BROADCASTER_PORT 6004
ENV PHP_VERSION         ${PHP_VERSION}
ENV PM_DOCKER_SOCK      "/var/run/docker.sock"

#
# debian package updates
#
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y --force-yes software-properties-common

RUN apt-add-repository ppa:ondrej/nginx -y && \
    apt-add-repository ppa:ondrej/php -y && \
    apt-get update -y

#
# debian other package installs
#
RUN apt-get install -y --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    nginx vim htop curl git zip unzip wget supervisor cron mysql-client build-essential \
    pkg-config gcc g++ libmcrypt4 libpcre3-dev make python3 python3-pip whois acl \
    libpng-dev libmagickwand-dev libpcre2-dev jq lnav net-tools

#
# debian PHP package installs
#
RUN apt-get install -y --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    php8.1 php8.1-cli php8.1-fpm php8.1-common php8.1-mysql php8.1-zip php8.1-gd \
    php8.1-mbstring php8.1-curl php8.1-xml php8.1-bcmath php8.1-imagick php8.1-dom \
    php8.1-sqlite3 php8.1-imap php8.1-redis php8.1-dev php8.1-mysql php8.1-soap \
    php8.1-intl php8.1-readline php8.1-msgpack php8.1-igbinary php8.1-gmp

RUN apt-get update -y && \
    apt-get autoremove -y && \
    apt-get clean

RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN setcap "cap_net_bind_service=+ep" /usr/bin/php8.1

#
# Git
#
RUN git config --global user.name "Alex Runyan" && \
    git config --global user.email "alex.runyan@processmaker.com"

#
# copy php config files
#
COPY stubs/php/${PHP_VERSION}/conf.d /etc/php/${PHP_VERSION}/cli/conf.d

#
# misc. php config setup
#
RUN sed -i 's/www-data/root/g' /etc/php/${PHP_VERSION}/fpm/pool.d/www.conf && \
    sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/8.1/cli/php.ini && \
    sed -i "s/display_errors = .*/display_errors = On/" /etc/php/8.1/cli/php.ini && \
    sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/8.1/cli/php.ini && \
    sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/8.1/cli/php.ini && \
    sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/8.1/cli/php.ini && \
    sed -i "s/display_errors = .*/display_errors = Off/" /etc/php/8.1/fpm/php.ini

#
# create directory for the php socket
#
RUN mkdir -p /run/php

#
# setup alternative updates for php8.1
#
RUN update-alternatives --set php /usr/bin/php8.1

#
# composer setup
#
RUN curl -sS https://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer

ENV COMPOSER_ALLOW_SUPERUSER 1

#
# node version manager setup
#
ENV NVM_DIR "/root/.nvm"

RUN if [ -d "$NVM_DIR" ]; then rm -rf "$NVM_DIR"; fi
RUN mkdir -p "$NVM_DIR"
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | sh
RUN chmod 0755 "$NVM_DIR/nvm.sh"
RUN ln -s "$NVM_DIR/nvm.sh" /usr/local/bin/nvm

RUN nvm install "$NODE_VERSION" && \
    nvm alias default "$NODE_VERSION" && \
    nvm use default

ENV NODE_PATH "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules"
ENV PATH      "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
ENV NPX_PATH  "$NVM_DIR/versions/node/v$NODE_VERSION/bin/npx"

#
# npm setup
#
RUN npm install -g npm@8.9

#
# cron
#
COPY stubs/laravel-cron /etc/cron.d/laravel-cron
RUN chmod 0644 /etc/cron.d/laravel-cron && \
    crontab /etc/cron.d/laravel-cron

#
# docker client
#
RUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz
RUN tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 -C /usr/local/bin docker/docker
RUN rm -f docker-${DOCKERVERSION}.tgz
RUN ln -s /usr/local/bin/docker /usr/bin/docker

#
# nginx
#
COPY stubs/nginx-php-${PHP_VERSION}.conf /etc/nginx/nginx.conf

#
# supervisord
#
COPY stubs/services-php-${PHP_VERSION}.conf /etc/supervisor/conf.d/services.conf

#
# ports
#
EXPOSE 80 443 6001
